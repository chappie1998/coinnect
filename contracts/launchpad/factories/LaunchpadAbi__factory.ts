/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.39.1
  Forc version: 0.35.5
  Fuel-Core version: 0.17.3
*/

import { Interface, Contract } from "fuels";
import type { Provider, Account, AbstractAddress } from "fuels";
import type { LaunchpadAbi, LaunchpadAbiInterface } from "../LaunchpadAbi";

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "enum Identity",
      "components": [
        {
          "name": "Address",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "ContractId",
          "type": 7,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "enum InputError",
      "components": [
        {
          "name": "AdminDoesNotExist",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "ApprovedDoesNotExist",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "NotEnoughTokensToMint",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "OwnerDoesNotExist",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "TokenDoesNotExist",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "TokenSupplyCannotBeZero",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "RateCannotBeZero",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "SoftCapCannotBeZero",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "HardCapCannotBeLessThanSoftCap",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "MinimumBuyCannotBeZero",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "MaximumBuyCannotBeLessThanMinimumBuy",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "BuyAmountCannotBeLessThanMinimumBuy",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "BuyAmountCannotBeGreaterThanMaximumBuy",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "StartBlockCannotBeLessThanCurrentBlock",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "EndBlockCannotBeLessThanStartBlock",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "IncorrectAmountProvided",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "IncorrectAssetProvided",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "PoolDoesNotExist",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "NotEnoughTokensToBuy",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "PoolExpired",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "enum Option",
      "components": [
        {
          "name": "None",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Some",
          "type": 5,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        5
      ]
    },
    {
      "typeId": 5,
      "type": "generic T",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 6,
      "type": "struct Address",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 7,
      "type": "struct ContractId",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 8,
      "type": "struct Pool",
      "components": [
        {
          "name": "creator",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "asset_address",
          "type": 7,
          "typeArguments": null
        },
        {
          "name": "buying_asset",
          "type": 7,
          "typeArguments": null
        },
        {
          "name": "rate",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "soft_cap",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "hard_cap",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "minimum_buy",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "maximum_buy",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "strat_block",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "end_block",
          "type": 10,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 9,
      "type": "struct PoolBalance",
      "components": [
        {
          "name": "selling_asset",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "buying_asset",
          "type": 10,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 10,
      "type": "u64",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 11,
      "type": "u8",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "pool_id",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "amount",
          "type": 10,
          "typeArguments": null
        }
      ],
      "name": "buy_token",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset_address",
          "type": 7,
          "typeArguments": null
        },
        {
          "name": "buying_asset",
          "type": 7,
          "typeArguments": null
        },
        {
          "name": "rate",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "soft_cap",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "hard_cap",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "minimum_buy",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "maximum_buy",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "strat_block",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "end_block",
          "type": 10,
          "typeArguments": null
        }
      ],
      "name": "create_pool",
      "output": {
        "name": "",
        "type": 10,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "pool_id",
          "type": 10,
          "typeArguments": null
        }
      ],
      "name": "get_pool",
      "output": {
        "name": "",
        "type": 4,
        "typeArguments": [
          {
            "name": "",
            "type": 8,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "pool_id",
          "type": 10,
          "typeArguments": null
        }
      ],
      "name": "get_pool_balance",
      "output": {
        "name": "",
        "type": 4,
        "typeArguments": [
          {
            "name": "",
            "type": 9,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "pool_id",
          "type": 10,
          "typeArguments": null
        }
      ],
      "name": "withdraw_balance",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": 0,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 1,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 2,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 3,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 4,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 5,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 6,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 7,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 8,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 9,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 10,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 11,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 12,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 13,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 14,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 15,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    },
    {
      "logId": 16,
      "loggedType": {
        "name": "",
        "type": 3,
        "typeArguments": []
      }
    }
  ],
  "messagesTypes": [],
  "configurables": []
}

export class LaunchpadAbi__factory {
  static readonly abi = _abi
  static createInterface(): LaunchpadAbiInterface {
    return new Interface(_abi) as unknown as LaunchpadAbiInterface
  }
  static connect(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider
  ): LaunchpadAbi {
    return new Contract(id, _abi, accountOrProvider) as unknown as LaunchpadAbi
  }
}
